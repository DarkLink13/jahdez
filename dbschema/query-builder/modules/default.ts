// GENERATED by @edgedb/generate v0.4.1

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
import type * as _auth from "./ext/auth";
export type $ItemType = {
  "Work": $.$expr_Literal<$ItemType>;
  "Position": $.$expr_Literal<$ItemType>;
  "Project": $.$expr_Literal<$ItemType>;
  "Skill": $.$expr_Literal<$ItemType>;
  "Root": $.$expr_Literal<$ItemType>;
  "Like": $.$expr_Literal<$ItemType>;
  "Default": $.$expr_Literal<$ItemType>;
} & $.EnumType<"default::ItemType", ["Work", "Position", "Project", "Skill", "Root", "Like", "Default"]>;
const ItemType: $ItemType = $.makeType<$ItemType>(_.spec, "98fba54a-d31f-11ee-83dd-4fb82d4e29ce", _.syntax.literal);

export type $LabelType = {
  "Date": $.$expr_Literal<$LabelType>;
  "Years": $.$expr_Literal<$LabelType>;
  "Since": $.$expr_Literal<$LabelType>;
  "Version": $.$expr_Literal<$LabelType>;
  "Link": $.$expr_Literal<$LabelType>;
  "Country": $.$expr_Literal<$LabelType>;
  "WorkType": $.$expr_Literal<$LabelType>;
  "Role": $.$expr_Literal<$LabelType>;
} & $.EnumType<"default::LabelType", ["Date", "Years", "Since", "Version", "Link", "Country", "WorkType", "Role"]>;
const LabelType: $LabelType = $.makeType<$LabelType>(_.spec, "98f919d7-d31f-11ee-bd81-35c3bfba33cd", _.syntax.literal);

export type $ModeType = {
  "dark": $.$expr_Literal<$ModeType>;
  "light": $.$expr_Literal<$ModeType>;
  "es": $.$expr_Literal<$ModeType>;
  "en": $.$expr_Literal<$ModeType>;
} & $.EnumType<"default::ModeType", ["dark", "light", "es", "en"]>;
const ModeType: $ModeType = $.makeType<$ModeType>(_.spec, "98fbb9fd-d31f-11ee-b734-13867f5211ce", _.syntax.literal);

export type $UserλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "identity": $.LinkDesc<_auth.$Identity, $.Cardinality.One, {}, false, false,  false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
}>;
type $User = $.ObjectType<"default::User", $UserλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $User = $.makeType<$User>(_.spec, "98db6f19-d31f-11ee-b4a6-59ff69155347", _.syntax.literal);

const User: $.$expr_PathNode<$.TypeSet<$User, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($User, $.Cardinality.Many), null);

export type $BackgroundλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "full": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "height": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "src": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "x": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "y": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "<background[is Item]": $.LinkDesc<$Item, $.Cardinality.Many, {}, false, false,  false, false>;
  "<background": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Background = $.ObjectType<"default::Background", $BackgroundλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Background = $.makeType<$Background>(_.spec, "98ee4d6c-d31f-11ee-aa35-35b73082e2d3", _.syntax.literal);

const Background: $.$expr_PathNode<$.TypeSet<$Background, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Background, $.Cardinality.Many), null);

export type $ColorλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "glow": $.LinkDesc<$Glow, $.Cardinality.Many, {}, false, false,  false, false>;
  "hover": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "primary": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "secondary": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "<colors[is Item]": $.LinkDesc<$Item, $.Cardinality.Many, {}, false, false,  false, false>;
  "<colors": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Color = $.ObjectType<"default::Color", $ColorλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Color = $.makeType<$Color>(_.spec, "98f2c79d-d31f-11ee-aad9-31de2b04b28f", _.syntax.literal);

const Color: $.$expr_PathNode<$.TypeSet<$Color, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Color, $.Cardinality.Many), null);

export type $DescriptionλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "en": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "es": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "<description[is Item]": $.LinkDesc<$Item, $.Cardinality.Many, {}, false, false,  false, false>;
  "<description": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Description = $.ObjectType<"default::Description", $DescriptionλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Description = $.makeType<$Description>(_.spec, "98f5250b-d31f-11ee-9a8a-b358228ac1fc", _.syntax.literal);

const Description: $.$expr_PathNode<$.TypeSet<$Description, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Description, $.Cardinality.Many), null);

export type $GlowλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "blur": $.PropertyDesc<_std.$int16, $.Cardinality.AtMostOne, false, false, false, false>;
  "color": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "<glow[is Color]": $.LinkDesc<$Color, $.Cardinality.Many, {}, false, false,  false, false>;
  "<glow": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Glow = $.ObjectType<"default::Glow", $GlowλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Glow = $.makeType<$Glow>(_.spec, "98f0d9c7-d31f-11ee-b8ee-f93447ebf574", _.syntax.literal);

const Glow: $.$expr_PathNode<$.TypeSet<$Glow, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Glow, $.Cardinality.Many), null);

export type $IconλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "key": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "size": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "top": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "<icon[is Item]": $.LinkDesc<$Item, $.Cardinality.Many, {}, false, false,  false, false>;
  "<icon": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Icon = $.ObjectType<"default::Icon", $IconλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Icon = $.makeType<$Icon>(_.spec, "98f71b07-d31f-11ee-b845-976c553b8f3c", _.syntax.literal);

const Icon: $.$expr_PathNode<$.TypeSet<$Icon, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Icon, $.Cardinality.Many), null);

export type $ItemλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "background": $.LinkDesc<$Background, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "colors": $.LinkDesc<$Color, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "description": $.LinkDesc<$Description, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "icon": $.LinkDesc<$Icon, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "label": $.LinkDesc<$Label, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "sublabels": $.LinkDesc<$Label, $.Cardinality.Many, {}, false, false,  false, false>;
  "action": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "details": $.PropertyDesc<_std.$json, $.Cardinality.AtMostOne, false, false, false, false>;
  "exp": $.PropertyDesc<_std.$int16, $.Cardinality.AtMostOne, false, false, false, false>;
  "mode": $.PropertyDesc<$ModeType, $.Cardinality.AtMostOne, false, false, false, false>;
  "style": $.PropertyDesc<_std.$json, $.Cardinality.AtMostOne, false, false, false, false>;
  "type": $.PropertyDesc<$ItemType, $.Cardinality.AtMostOne, false, false, false, false>;
  "<item[is Node]": $.LinkDesc<$Node, $.Cardinality.Many, {}, false, false,  false, false>;
  "<item": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Item = $.ObjectType<"default::Item", $ItemλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Item = $.makeType<$Item>(_.spec, "98fbce66-d31f-11ee-8e6e-2f178d5cf6a8", _.syntax.literal);

const Item: $.$expr_PathNode<$.TypeSet<$Item, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Item, $.Cardinality.Many), null);

export type $LabelλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "bottom": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "color": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "en": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "es": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "size": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "subvalue": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "type": $.PropertyDesc<$LabelType, $.Cardinality.AtMostOne, false, false, false, false>;
  "<label[is Item]": $.LinkDesc<$Item, $.Cardinality.Many, {}, false, false,  false, false>;
  "<sublabels[is Item]": $.LinkDesc<$Item, $.Cardinality.Many, {}, false, false,  false, false>;
  "<label": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<sublabels": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Label = $.ObjectType<"default::Label", $LabelλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Label = $.makeType<$Label>(_.spec, "98f92f5f-d31f-11ee-bc7f-efe5d11eb9d1", _.syntax.literal);

const Label: $.$expr_PathNode<$.TypeSet<$Label, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Label, $.Cardinality.Many), null);

export type $NodeλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "item": $.LinkDesc<$Item, $.Cardinality.One, {}, false, false,  false, false>;
  "children": $.LinkDesc<$Node, $.Cardinality.Many, {}, false, false,  false, false>;
  "parent": $.LinkDesc<$Node, $.Cardinality.Many, {}, false, true,  false, false>;
  "position": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, false>;
  "style": $.PropertyDesc<_std.$json, $.Cardinality.AtMostOne, false, false, false, false>;
  "<children[is Node]": $.LinkDesc<$Node, $.Cardinality.Many, {}, false, false,  false, false>;
  "<parent[is Node]": $.LinkDesc<$Node, $.Cardinality.Many, {}, false, false,  false, false>;
  "<children": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<parent": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Node = $.ObjectType<"default::Node", $NodeλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Node = $.makeType<$Node>(_.spec, "9900c070-d31f-11ee-9158-b75041ddd3b7", _.syntax.literal);

const Node: $.$expr_PathNode<$.TypeSet<$Node, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Node, $.Cardinality.Many), null);

export type $current_userλShape = $.typeutil.flatten<$UserλShape & {
}>;
type $current_user = $.ObjectType<"default::current_user", $current_userλShape, null, [
  ...$User['__exclusives__'],
]>;
const $current_user = $.makeType<$current_user>(_.spec, "98edd6db-d31f-11ee-ab83-d9a3f159878d", _.syntax.literal);

const current_user: $.$expr_PathNode<$.TypeSet<$current_user, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($current_user, $.Cardinality.Many), null);

const $default__globals: {  current_user: _.syntax.$expr_Global<
              // "default::current_user",
              $current_user,
              $.Cardinality.AtMostOne
              >} = {  current_user: _.syntax.makeGlobal(
              "default::current_user",
              $.makeType(_.spec, "98edd6db-d31f-11ee-ab83-d9a3f159878d", _.syntax.literal),
              $.Cardinality.AtMostOne) as any};



export { ItemType, LabelType, ModeType, $User, User, $Background, Background, $Color, Color, $Description, Description, $Glow, Glow, $Icon, Icon, $Item, Item, $Label, Label, $Node, Node, $current_user, current_user };

type __defaultExports = {
  "ItemType": typeof ItemType;
  "LabelType": typeof LabelType;
  "ModeType": typeof ModeType;
  "User": typeof User;
  "Background": typeof Background;
  "Color": typeof Color;
  "Description": typeof Description;
  "Glow": typeof Glow;
  "Icon": typeof Icon;
  "Item": typeof Item;
  "Label": typeof Label;
  "Node": typeof Node;
  "current_user": typeof current_user;
  "global": typeof $default__globals
};
const __defaultExports: __defaultExports = {
  "ItemType": ItemType,
  "LabelType": LabelType,
  "ModeType": ModeType,
  "User": User,
  "Background": Background,
  "Color": Color,
  "Description": Description,
  "Glow": Glow,
  "Icon": Icon,
  "Item": Item,
  "Label": Label,
  "Node": Node,
  "current_user": current_user,
  "global": $default__globals
};
export default __defaultExports;
